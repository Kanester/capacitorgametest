name: Build Android APK

on:
  push:
    branches: ['main']

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Cache sveltekit artifacts
        uses: actions/cache@v4
        with:
          path: |
            .svelte-kit
            node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-vite-

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Svelte project
        run: pnpm build

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Capacitor sync
        run: pnpm cap sync android

      - name: Build APK
        run: cd android && ./gradlew assembleRelease

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > my-release-key.keystore
          ls -lh my-release-key.keystore

      - name: Align APK
        run: |
          BUILD_TOOLS=$(ls $ANDROID_HOME/build-tools | sort -r | head -n 1)
          $ANDROID_HOME/build-tools/$BUILD_TOOLS/zipalign -v 4 \
            android/app/build/outputs/apk/release/app-release-unsigned.apk \
            android/app/build/outputs/apk/release/app-release-aligned.apk

      - name: Sign APK with apksigner
        run: |
          BUILD_TOOLS=$(ls $ANDROID_HOME/build-tools | sort -r | head -n 1)
          $ANDROID_HOME/build-tools/$BUILD_TOOLS/apksigner sign \
            --ks my-release-key.keystore \
            --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} \
            --key-pass pass:${{ secrets.KEY_PASSWORD }} \
            --out android/app/build/outputs/apk/release/app-release-signed.apk \
            android/app/build/outputs/apk/release/app-release-aligned.apk

      - name: Verify APK
        run: |
          BUILD_TOOLS=$(ls $ANDROID_HOME/build-tools | sort -r | head -n 1)
          $ANDROID_HOME/build-tools/$BUILD_TOOLS/apksigner verify \
            android/app/build/outputs/apk/release/app-release-signed.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release-signed.apk